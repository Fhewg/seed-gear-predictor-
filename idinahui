local RESTOCK_INTERVAL = 300 -- 5 мин
local LOOKAHEAD_SECONDS = 7 * 24 * 60 * 60 -- 7 дней в секундах
local LOOKAHEAD_RESTOCKS = LOOKAHEAD_SECONDS / RESTOCK_INTERVAL -- ≈2016 рестоков

local TimeZones = {
    {Name="Армения (UTC+4)", Offset=4*3600},
    {Name="Москва (UTC+3)", Offset=3*3600},
    {Name="Казахстан (UTC+6)", Offset=6*3600},
    {Name="США (UTC-5)", Offset=-5*3600},
}

local currentTZIndex = 1

local WEEK_DAYS_RU = {"Вс","Пн","Вт","Ср","Чт","Пт","Сб"}

local function utcToTzTime(utcTimestamp, offsetSeconds)
    return utcTimestamp + offsetSeconds
end

local function formatRestockInterval(seed, tzOffset)
    local startUtc = seed * RESTOCK_INTERVAL
    local start = utcToTzTime(startUtc, tzOffset)
    local finish = start + RESTOCK_INTERVAL - 1
    local w = tonumber(os.date("!%w", start)) or 0
    local dayRu = WEEK_DAYS_RU[w+1] or os.date("!%a", start)
    local st = os.date("!*t", start)
    local fn = os.date("!*t", finish)
    return string.format("%s %s, %02d:%02d-%02d:%02d", dayRu,
        os.date("!%d.%m.%Y", start),
        st.hour, st.min,
        fn.hour, fn.min)
end

-- Создаём угли гуй
local CoreGui = game:GetService("CoreGui")
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "UgliGui_Predictor"
ScreenGui.Parent = CoreGui

local MainFrame = Instance.new("Frame", ScreenGui)
MainFrame.Size = UDim2.new(0, 200, 0, 275)
MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Name = "MainFrame"

local TitleBar = Instance.new("Frame", MainFrame)
TitleBar.Size = UDim2.new(1, 0, 0, 30)
TitleBar.BackgroundColor3 = Color3.fromRGB(40,40,40)
TitleBar.Name = "TitleBar"

local TzLabel = Instance.new("TextLabel", TitleBar)
TzLabel.Size = UDim2.new(0, 120, 1, 0)
TzLabel.Position = UDim2.new(1, -130, 0, 0)
TzLabel.BackgroundTransparency = 1
TzLabel.TextColor3 = Color3.new(1,1,1)
TzLabel.Font = Enum.Font.SourceSansBold
TzLabel.TextSize = 11
TzLabel.TextXAlignment = Enum.TextXAlignment.Right
TzLabel.Text = "Временная зона: " .. TimeZones[currentTZIndex].Name

local function updateTzLabel()
    TzLabel.Text = "Временная зона: " .. TimeZones[currentTZIndex].Name
end

local TzBtn = Instance.new("TextButton", TitleBar)
TzBtn.Size = UDim2.new(0, 30, 1, 0)
TzBtn.Position = UDim2.new(1, -30, 0, 0)
TzBtn.BackgroundColor3 = Color3.fromRGB(70,70,70)
TzBtn.TextColor3 = Color3.new(1,1,1)
TzBtn.Font = Enum.Font.SourceSansBold
TzBtn.TextSize = 16
TzBtn.Text = "⟳"
TzBtn.MouseButton1Click:Connect(function()
    currentTZIndex = currentTZIndex + 1
    if currentTZIndex > #TimeZones then currentTZIndex = 1 end
    updateTzLabel()
    if PredictorFrame.Visible then
        RefreshPredictor()
    elseif DetailFrame.Visible then
        ShowDetail(currentDetailItemName)
    end
end)

local function CreateButton(parent, text, callback)
    local btn = Instance.new("TextButton", parent)
    btn.Size = UDim2.new(1, -12, 0, 24)
    btn.BackgroundColor3 = Color3.fromRGB(50,50,50)
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Font = Enum.Font.SourceSans
    btn.TextSize = 12
    btn.Text = text
    btn.AutoButtonColor = true
    btn.LayoutOrder = #parent:GetChildren() + 1
    btn.MouseButton1Click:Connect(callback)
    return btn
end

local function CreateLabel(parent, text)
    local lbl = Instance.new("TextLabel", parent)
    lbl.Size = UDim2.new(1, -12, 0, 18)
    lbl.BackgroundTransparency = 1
    lbl.TextColor3 = Color3.new(1,1,1)
    lbl.Font = Enum.Font.SourceSansBold
    lbl.TextSize = 12
    lbl.Text = text
    lbl.TextXAlignment = Enum.TextXAlignment.Left
    lbl.LayoutOrder = #parent:GetChildren() + 1
    return lbl
end

local function CreateScroll(parent)
    local sf = Instance.new("ScrollingFrame", parent)
    sf.Size = UDim2.new(1, -12, 1, -12)
    sf.Position = UDim2.new(0, 6, 0, 6)
    sf.BackgroundTransparency = 1
    sf.ScrollBarThickness = 6
    sf.CanvasSize = UDim2.new(0,0,0,0)

    local layout = Instance.new("UIListLayout", sf)
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Padding = UDim.new(0,4)

    return sf, layout
end

local SeedData = require(game.ReplicatedStorage.Data.SeedData)
local GearData = require(game.ReplicatedStorage.Data.GearData)

local SeedKeyOrdering, GearKeyOrdering = {}, {}
for k in pairs(SeedData) do table.insert(SeedKeyOrdering, k) end
for k in pairs(GearData) do table.insert(GearKeyOrdering, k) end
table.sort(SeedKeyOrdering, function(a,b) return SeedData[a].Price < SeedData[b].Price end)
table.sort(GearKeyOrdering, function(a,b) return GearData[a].Price < GearData[b].Price end)

local function GetStockAtSeed(Seed, Data, KeyOrdering, NameKey)
    local Rand = Random.new(Seed)
    local Stock = {}
    for _, key in ipairs(KeyOrdering) do
        local v = Data[key]
        if v and v.StockChance and v.StockAmount and v.DisplayInShop and v[NameKey] then
            local chance = Rand:NextInteger(1, v.StockChance)
            local amount = Rand:NextInteger(v.StockAmount[1], v.StockAmount[2])
            if chance == 1 and amount > 0 then
                Stock[v[NameKey]] = amount
            end
        end
    end
    return Stock
end

local function FindAllOccurrences(name, Data, KeyOrdering, NameKey, maxRestocks, currentSeed)
    local occurrences = {}
    for offset=1,maxRestocks do
        local seed = currentSeed + offset
        local stock = GetStockAtSeed(seed, Data, KeyOrdering, NameKey)
        local amount = stock[name]
        if amount then
            table.insert(occurrences, {seed=seed, amount=amount})
        end
    end
    return occurrences
end

local function FormatOccurrences(name, occurrences, tzOffset)
    if #occurrences == 0 then return "За выбранный период предмет не появится." end
    local lines = {}
    table.insert(lines, "Предмет: "..name)
    for i, occ in ipairs(occurrences) do
        local timeStr = formatRestockInterval(occ.seed, tzOffset)
        table.insert(lines, string.format("%d) %s - x%d", i, timeStr, occ.amount))
    end
    return table.concat(lines, "\n")
end

local Content = Instance.new("Frame", MainFrame)
Content.Size = UDim2.new(1, 0, 1, -30)
Content.Position = UDim2.new(0, 0, 0, 30)
Content.BackgroundTransparency = 1

local PredictorFrame = Instance.new("Frame", Content)
PredictorFrame.Size = UDim2.new(1,0,1,0)
PredictorFrame.BackgroundTransparency = 1
PredictorFrame.Visible = true

local DetailFrame = Instance.new("Frame", Content)
DetailFrame.Size = UDim2.new(1,0,1,0)
DetailFrame.BackgroundTransparency = 1
DetailFrame.Visible = false

local PredictorScroll, PredictorLayout = CreateScroll(PredictorFrame)
PredictorScroll.CanvasSize = UDim2.new(0,0,0,0)

local RefreshBtn = Instance.new("TextButton", PredictorFrame)
RefreshBtn.Size = UDim2.new(1, -12, 0, 28)
RefreshBtn.Position = UDim2.new(0, 6, 0, 6)
RefreshBtn.BackgroundColor3 = Color3.fromRGB(60,60,60)
RefreshBtn.TextColor3 = Color3.new(1,1,1)
RefreshBtn.Font = Enum.Font.SourceSansBold
RefreshBtn.TextSize = 14
RefreshBtn.Text = "REFRESH"
RefreshBtn.ZIndex = 5

local DetailScroll, DetailLayout = CreateScroll(DetailFrame)
DetailScroll.CanvasSize = UDim2.new(0,0,0,0)
DetailScroll.Position = UDim2.new(0,6,0,30)
DetailScroll.Size = UDim2.new(1, -12, 1, -36)

local DetailLabel = Instance.new("TextLabel", DetailFrame)
DetailLabel.Size = UDim2.new(1, -12, 0, 24)
DetailLabel.Position = UDim2.new(0, 6, 0, 0)
DetailLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
DetailLabel.TextColor3 = Color3.new(1, 1, 1)
DetailLabel.Font = Enum.Font.SourceSansBold
DetailLabel.TextSize = 14
DetailLabel.Text = "Детали"
DetailLabel.TextXAlignment = Enum.TextXAlignment.Left

local BackBtn = Instance.new("TextButton", DetailFrame)
BackBtn.Size = UDim2.new(0, 50, 0, 24)
BackBtn.Position = UDim2.new(0, 6, 1, -30)
BackBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
BackBtn.TextColor3 = Color3.new(1,1,1)
BackBtn.Font = Enum.Font.SourceSansBold
BackBtn.TextSize = 12
BackBtn.Text = "НАЗАД"

local currentDetailItemName = nil

local function ClearScroll(frame)
    for _, c in ipairs(frame:GetChildren()) do
        if not c:IsA("UIListLayout") then
            c:Destroy()
        end
    end
end

local UserInputService = game:GetService("UserInputService")
local ClipboardService = nil
pcall(function()
    ClipboardService = game:GetService("Clipboard")
end)

local function copyToClipboard(text)
    if ClipboardService then
        ClipboardService:SetClipboard(text)
    else
        print("COPY: "..text)
    end
end

function RefreshPredictor()
    RefreshBtn.Text = "REFRESH (загрузка...)"
    RefreshBtn.Active = false

    ClearScroll(PredictorScroll)

    local currentSeed = math.floor(workspace:GetServerTimeNow() / RESTOCK_INTERVAL)

    CreateLabel(PredictorScroll, "=== Семена ===")

    local seedResults = {}
    for _, key in ipairs(SeedKeyOrdering) do
        local v = SeedData[key]
        if v and v.SeedName then
            local name = v.SeedName
            local occurrences = FindAllOccurrences(name, SeedData, SeedKeyOrdering, "SeedName", LOOKAHEAD_RESTOCKS, currentSeed)
            if #occurrences > 0 then -- создаём кнопку только если были появления
                seedResults[name] = occurrences
            end
        end
    end

    local seedList = {}
    for name, occs in pairs(seedResults) do
        table.insert(seedList, {name = name, occurrences = occs})
    end
    table.sort(seedList, function(a,b)
        return a.occurrences[1].seed < b.occurrences[1].seed
    end)

    for _, entry in ipairs(seedList) do
        local firstOcc = entry.occurrences[1]
        local disp = string.format("%s | %s | x%d", entry.name, formatRestockInterval(firstOcc.seed, TimeZones[currentTZIndex].Offset), firstOcc.amount)
        CreateButton(PredictorScroll, disp, function()
            ShowDetail(entry.name)
        end)
    end

    CreateLabel(PredictorScroll, "=== Инструменты ===")

    local gearResults = {}
    for _, key in ipairs(GearKeyOrdering) do
        local v = GearData[key]
        if v and v.GearName then
            local name = v.GearName
            local occurrences = FindAllOccurrences(name, GearData, GearKeyOrdering, "GearName", LOOKAHEAD_RESTOCKS, currentSeed)
            if #occurrences > 0 then -- только если есть появления
                gearResults[name] = occurrences
            end
        end
    end

    local gearList = {}
    for name, occs in pairs(gearResults) do
        table.insert(gearList, {name = name, occurrences = occs})
    end
    table.sort(gearList, function(a,b)
        return a.occurrences[1].seed < b.occurrences[1].seed
    end)

    for _, entry in ipairs(gearList) do
        local firstOcc = entry.occurrences[1]
        local disp = string.format("%s | %s | x%d", entry.name, formatRestockInterval(firstOcc.seed, TimeZones[currentTZIndex].Offset), firstOcc.amount)
        CreateButton(PredictorScroll, disp, function()
            ShowDetail(entry.name)
        end)
    end

    PredictorScroll.CanvasSize = UDim2.new(0,0,0,PredictorLayout.AbsoluteContentSize.Y + 20)

    RefreshBtn.Text = "REFRESH"
    RefreshBtn.Active = true
end

function ShowDetail(name)
    currentDetailItemName = name
    PredictorFrame.Visible = false
    DetailFrame.Visible = true
    ClearScroll(DetailScroll)

    local currentSeed = math.floor(workspace:GetServerTimeNow() / RESTOCK_INTERVAL)
    local tzOffset = TimeZones[currentTZIndex].Offset

    local dataTable, keyOrdering, nameKey
    local foundInSeed = false
    for _, v in pairs(SeedData) do if v.SeedName == name then foundInSeed = true break end end
    if foundInSeed then
        dataTable = SeedData
        keyOrdering = SeedKeyOrdering
        nameKey = "SeedName"
    else
        dataTable = GearData
        keyOrdering = GearKeyOrdering
        nameKey = "GearName"
    end

    local occurrences = FindAllOccurrences(name, dataTable, keyOrdering, nameKey, LOOKAHEAD_RESTOCKS, currentSeed)

    local text = FormatOccurrences(name, occurrences, tzOffset)

    local DetailTextLabel = Instance.new("TextLabel", DetailScroll)
    DetailTextLabel.Size = UDim2.new(1, -12, 0, 14 * (#occurrences + 2))
    DetailTextLabel.BackgroundTransparency = 1
    DetailTextLabel.TextColor3 = Color3.new(1, 1, 1)
    DetailTextLabel.Font = Enum.Font.SourceSans
    DetailTextLabel.TextSize = 14
    DetailTextLabel.TextXAlignment = Enum.TextXAlignment.Left
    DetailTextLabel.TextYAlignment = Enum.TextYAlignment.Top
    DetailTextLabel.TextWrapped = true
    DetailTextLabel.Text = text

    DetailScroll.CanvasSize = UDim2.new(0, 0, 0, DetailTextLabel.AbsoluteSize.Y + 10)

    DetailTextLabel.Active = true
    DetailTextLabel.Selectable = false
    DetailTextLabel.MouseButton1Down:Connect(function()
        copyToClipboard(text)
    end)
end

BackBtn.MouseButton1Click:Connect(function()
    DetailFrame.Visible = false
    PredictorFrame.Visible = true
end)

RefreshBtn.MouseButton1Click:Connect(function()
    RefreshPredictor()
end)

RefreshPredictor()
